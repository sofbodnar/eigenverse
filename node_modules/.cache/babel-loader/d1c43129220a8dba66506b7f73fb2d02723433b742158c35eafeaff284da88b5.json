{"ast":null,"code":"var _jsxFileName = \"/Users/sonia/Documents/GitHub/eigenverse/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://kvxjtitqdofvjpafazhz.supabase.co';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    detectSessionInUrl: true,\n    storage: window.localStorage,\n    storageKey: 'eigenverse-auth-token'\n  }\n});\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const getSession = async () => {\n      try {\n        const {\n          data: {\n            session\n          },\n          error\n        } = await supabase.auth.getSession();\n        console.log('Initial session check:', {\n          session,\n          error\n        });\n        if (session) {\n          setUser(session.user);\n          setIsAuthenticated(true);\n        } else {\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error('Session check error:', error);\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getSession();\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange(async (event, session) => {\n      console.log('Auth state change:', {\n        event,\n        session\n      });\n      if (session) {\n        setUser(session.user);\n        setIsAuthenticated(true);\n      } else {\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n      setLoading(false);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) throw error;\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const signup = async (email, password) => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password\n      });\n      if (error) throw error;\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) throw error;\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      login,\n      signup,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseAnonKey","process","env","REACT_APP_SUPABASE_ANON_KEY","supabase","auth","persistSession","detectSessionInUrl","storage","window","localStorage","storageKey","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","getSession","data","session","error","console","log","subscription","onAuthStateChange","event","unsubscribe","login","email","password","signInWithPassword","success","message","signup","signUp","logout","signOut","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sonia/Documents/GitHub/eigenverse/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = 'https://kvxjtitqdofvjpafazhz.supabase.co';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    persistSession: true,\n    detectSessionInUrl: true,\n    storage: window.localStorage,\n    storageKey: 'eigenverse-auth-token'\n  }\n});\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getSession = async () => {\n      try {\n        const { data: { session }, error } = await supabase.auth.getSession();\n        console.log('Initial session check:', { session, error });\n        \n        if (session) {\n          setUser(session.user);\n          setIsAuthenticated(true);\n        } else {\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error('Session check error:', error);\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getSession();\n\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event, session) => {\n        console.log('Auth state change:', { event, session });\n        \n        if (session) {\n          setUser(session.user);\n          setIsAuthenticated(true);\n        } else {\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n        setLoading(false);\n      }\n    );\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n      if (error) throw error;\n      return { success: true, user: data.user };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  };\n\n  const signup = async (email, password) => {\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n      });\n      if (error) throw error;\n      return { success: true, user: data.user };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      return { success: true };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{\n      isAuthenticated,\n      user,\n      loading,\n      login,\n      signup,\n      logout\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}